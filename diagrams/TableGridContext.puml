@startuml
class TableGridContext {
    state: Object,
    dispatch: Object
}
object state {
    data: []
    sorting: []
    filters: Object
    isCtrlPressed: bool
    didInvalidate: bool
}
object filters {
    [accessor]: object filter
}
object filter << filter values and type >> {
    value: [string | number]
    type: enum filterTypes
    didInvalidate: bool // if true value list for this filter should be updated
}
enum filterTypes {
    EQ
    NE
    LT
    LE
    GT
    GE
    STARTING
    ENDING
    LIST
}

class  l_actions << (A, red) Local Actions >> {
    invalidateData()
    addSorting(accessor)
    setSorting(accessor)
    ctrlDown()
    ctrlUp()
    addFilterValue({accessor, value})
    removeFilterValue({accessor, value})
    setFilterValue({accessor, value})
    setFilterType({accessor, value})
}
class s_actions << (A, red) Server Actions >> {
    loadingData()
    requestData({fetchFunction, filter, sorting})
    receiveData({data})
}

TableGridContext *-- state
state *- filters
filters *-- filter
filter *-- filterTypes
TableGridContext <|- l_actions
TableGridContext <|- s_actions

@enduml